

{# TODO: refresh importer stuff but only on importer-route #}
<!--meta http-equiv="refresh" content="5; URL=/importer?debug=1"-->

<div class="row">
	<div class="col-md-10">
		<h2>Recent Importer Jobs</h2>
	</div>
	<div class="col-md-2">
		<button role="control" data-href="{{root}}importer/triggerUpdate" title="update sliMPD-db based on MPD-db" class="ajax-rqst btn btn-default">
			<i class="fa fa-refresh"></i> Update SliMPD Database
		</button>
	</div>
</div>
<style type="text/css">

.importer-stats td,
.importer-stats th {
	text-align: center;
}
td.ar {
	te_xt-align: right;
}
</style>

<table style="width: 100%;" class="importer-stats">
	<tr class="header">
		<th>Phase</th>
		<th>Progress</th>
		<th>Total Duration</th>
		<th>Items/min</th>
		<th>Items/hr</th>
		<th>Total</th>
		<th>Checked</th>
		<th>Processed</th>
		<th>Additional Info</th>
	</tr>
	
	{% set statusWording = 'dead' %}
	{% set statusImage = '' %}
	{% for item in itemlist %}
	<tr class="{{ cycle(['bg-col2','bg-col3'],loop.index) }}">
		{% if loop.first == true %}
			{% if (servertime - item.jobLastUpdate) < 6 %}
				{% set statusWording = 'running' %}
				{% set statusImage = '<img src="'~config.absRefPrefix~'skin/default/img/playing.gif" />' %}
			{% endif %}
		{% else %}
			{% set statusWording = 'dead' %}
			{% set statusImage = '' %}
		{% endif %}
		<td title="{{ item.id }}">{{ item.jobPhase }}</td>
		
		{% if item.jobStatistics.progressPercent == 100 %}
		<td>100%</td>
		<td>{{ item.jobStatistics.runtimeSeconds|formatSeconds }}</td>
		{% else %}
		{# TODO: animate progressbar with "item.jobStatistics.progressPercent" and "item.jobStatistics.speedPercentPerSecond" #}
		<td>{{ item.jobStatistics.progressPercent }}% (~{{ item.jobStatistics.estimatedRemainingSeconds|formatSeconds }} left)</td>
		<td>{{ item.jobStatistics.estimatedTotalRuntime|formatSeconds }}</td>
		{% endif %}
		
		<td class="ar" title="{{ item.jobStatistics.speedItemsPerMinute }}">{{ item.jobStatistics.speedItemsPerMinute|shorty }}
		<td class="ar" title="{{ item.jobStatistics.speedItemsPerHour }}">{{ item.jobStatistics.speedItemsPerHour|shorty }}</td>
		</td>
		<td>{{ item.jobStatistics.itemCountTotal }}</td>
		<td>{{ item.jobStatistics.itemCountChecked }}</td>
		<td>{{ item.jobStatistics.itemCountProcessed }}</td>
		<td>
			{% if item.jobStatistics.extractedImages %}
				<strong>Extracted Images:</strong> {{ item.jobStatistics.extractedImages }}<br/> 
			{% endif %}
			
			{% if item.jobStatistics.insertedImages %}
				<strong>Inserted Images:</strong> {{ item.jobStatistics.insertedImages }}<br/> 
			{% endif %}
			
			{% if item.jobStatistics.deletedFileSize %}
				<strong>Deleted Files Size:</strong> {{ item.jobStatistics.deletedFileSize }}<br/> 
			{% endif %}
			
			{% if item.jobStatistics.insertedAlbums %}
				<strong>Inserted Albums:</strong> <a href="{{root}}album/{{ item.jobStatistics.insertedAlbums }}">{{ item.jobStatistics.insertedAlbums }}</a><br/> 
			{% endif %}
			
			{% if item.jobStatistics.updatedAlbums %}
				<strong>Updated Albums:</strong> {{ item.jobStatistics.updatedAlbums }}<br /> 
			{% endif %}
			
			{% if item.jobStatistics.deadfiles %}
				<strong>Dead Files:</strong> {{ item.jobStatistics.deadfiles }}<br/> 
			{% endif %}
			
			{% if item.jobStatistics.unmodified_files %}
				<strong>Unmodified Files:</strong> {{ item.jobStatistics.unmodified_files }}<br/> 
			{% endif %}
			
			{% if item.jobStatistics.directorycount %}
				<strong>Directory Count:</strong> {{ item.jobStatistics.directorycount }}<br/> 
			{% endif %}
			
			{% if item.jobStatistics.deletedRecords %}
				<strong>Deleted Records:</strong> {{ item.jobStatistics.deletedRecords }}<br/> 
			{% endif %}
			
			
		</td>
	
	</tr>
	{% if item.jobStatistics.currentItem %}
	<tr class="headerX">
		<td colspan="10" style="font-size: 0.7em; color:#888;">
			<strong>Current Item:</strong> {{ item.jobStatistics.currentItem }}<br/>
		</td> 
	{% endif %}
	
	<tr class="line"><td colspan="10"></td></tr>
	{% endfor %}
</table>


<h2>Phase 0: MPD-Database Update</h2>
<p>This is completely handeled by MPD itself and has nothing to do with sliMPD. The starting point for sliMPD is the MPD database file.</p>

<h2>Phase 1: Process MPD Database File</h2>
<p>All information (filepath, artist, title, duration, file-time,...) stored by MPD gets collected and inserted in table:rawtagdata.<br />
In case file-time has not changed, there will be no update to the correspondending rawtagdata-record.</p>

<h2>Phase 2: Scan Music File Tags</h2>
<p>All tracks of rawtagdata-table whos last scantimes are older than file-time will be scanned by getid3.php<br />
The information fetched will be stored in the rawtagdata-table without modifying anything (like setting default values).<br />
If "/config.ini" section:"[images]" option:"read_embeded" is set to "1", the extracted image data will be stored to a file in the folder "/embedded/" and a correpondendig database-record in table:bitmap will be created.</p>

<h2>Phase 3: Migrate Raw Tag Data</h2>
<p>The table:tracks is very similar to table:rawtagdata.
With the rawtag-information as a basis, the track-records are given default values and some modifications, ie: title="My Super Song (%s & %s VIP Mix)" remixerId="123,456".<br />
Artist+Label+Genre information is stored within separate tables.<br />
Bitmap-records are completed with an album Id.
</p>

<h2>Phase 4: Delete Extracted Image Duplicates</h2>
<p>In many cases all tracks of an album have identical album images embeded within their id3v2-tags. There is no need to store these duplicate images.<br />
SliMPD makes a "fuzzy" comparison, and deletes the duplicate images in the tabel:bitmap, and the filesystem (with write privliges).</p>
